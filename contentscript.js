// Try to find a named branch in the current page
function getNamedBranch() {
 	return $('.pull-description .commit-ref .css-truncate-target')
 			.last()
 			.map(function() { return $(this).text() })
 			.get(0);
}


// Try to find diff file line numbers on the current page and link them their locations
function updateLineNumberButtons() {
	$('.linkable-line-number').each(function(i, el) {
    	el.onclick = function(mouseEvent) {
      		var line = $.trim(el.innerText);
      		if(parseInt(line)) {
        		// `line` seems to be a valid line number. Generate the URL to view the file at this line.
        		var baseURL = $(el).first().parentsUntil('.diff-view').last().find('.grouped-button')[0].href;
        		var lineParameter = '#L' + line + '-' + line;

        		// If the used presses the `alt` key we try to open the file for editing:
        		if(mouseEvent.altKey) {
          			var branch = getNamedBranch();

          			if(branch) {
            			baseURL = baseURL.replace(/blob\/[a-z0-9]+/, 'edit/' + branch);
            			lineParameter = '?gotoLine=' + line; 
          			} else {
            			alert('Sorry, you can\'t edit this file because you\'re not on a named branch');
          			}
        		}

        		window.open(baseURL + lineParameter, '_blank');
      		}
    	}
  	})
}


// Read a URL parameter from the current window URL
function getURLParameter(sParam) {
	var sPageURL = window.location.search.substring(1);
  	var sURLVariables = sPageURL.split('&');
    	for (var i = 0; i < sURLVariables.length; i++) {
        	var sParameterName = sURLVariables[i].split('=');
        	if (sParameterName[0] == sParam) {
            	return sParameterName[1];
        }
    }
}


// Check for a valid `gotoLine` URL parameter (generated by github magic) and try to find the github
// editor window in order to jump to the specified line.
function gotoLine() {
 	var line = parseInt(getURLParameter('gotoLine'));
 	if(line) {
		$(window).load(function() {
   			location.href = 'javascript:editor.ace.gotoLine(' + line + ', 0, false);' +
   			                ' editor.ace.scrollToRow(' + (line-1) + ');'
    	});
  	}  
}


// Detect a github page. I use this method instead of an URL check to support github enterprise
// instances.
function isGithubSite() {
	return $('meta[property="og:site_name"]').attr('content') === "GitHub";
}


// Main function. Executed after on document end (as defined in manifest.json)
if(isGithubSite()) {
	updateLineNumberButtons();
	gotoLine();
}